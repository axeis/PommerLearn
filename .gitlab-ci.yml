# use the official gcc image, based on debian
# can use verions as well, like gcc:5.2
# see https://hub.docker.com/_/gcc/
image: gcc

default:
  # install dependencies
  before_script:
    - apt update
    - wget -nv https://repo.anaconda.com/miniconda/Miniconda3-py37_4.9.2-Linux-x86_64.sh -O miniconda3.sh
    - bash miniconda3.sh -b -p ./miniconda3
    - export PATH="$PWD/miniconda3/bin:$PATH"
    # create and activate environment
    - conda create -n pommer_build python=3.7
    - source $PWD/miniconda3/bin/activate pommer_build
    # install (some) dependencies via conda-forge
    - conda install -y -c conda-forge z5py xtensor boost nlohmann_json blosc catch2
    # get libraries that are not in conda-forge
    - mkdir lib
    - cd lib
    # required for blaze
    - apt -y install libblas-dev liblapack-dev
    - wget https://bitbucket.org/blaze-lib/blaze/downloads/blaze-3.8.tar.gz
    - tar -xf blaze-3.8.tar.gz 
    # PyTorch (CPU-only)
    - wget -nv https://download.pytorch.org/libtorch/cpu/libtorch-cxx11-abi-shared-with-deps-1.8.1%2Bcpu.zip -O libtorch.zip
    - unzip libtorch.zip
    - bash ../fix_pytorch.sh ./libtorch
    - cd ..
    # CMake
    - apt -y install cmake

build:
  stage: build
  variables:
    GIT_SUBMODULE_STRATEGY: recursive
  script:
    - export BLAZE_PATH="$PWD/lib/blaze-3.8"
    - export CONDA_ENV_PATH="$PWD/miniconda3/envs/pommer_build"
    - export Torch_DIR="$PWD/lib/libtorch"
    - mkdir build
    - cd build
    - cmake -DUSE_TENSORRT=OFF -DUSE_TORCH=ON -DCMAKE_CXX_COMPILER="$(which g++)" ..
    - make VERBOSE=1 all
    - ldd ./PommerLearn
  artifacts:
    paths:
      - ./build/PommerLearn
      - ./build/PommerLearnTest

run:
  stage: test
  needs: ["build"]
  script:
    - ldd ./build/PommerLearn
    - ./build/PommerLearn


#include <iostream>

#include "runner.h"
#include "ipc_manager.h"
#include "pomcpp_util.h"

int main(int argc, char **argv) {
    std::string jState = "{\"board_size\": 11, \"step_count\": 0, \"board\": [[0, 2, 1, 1, 2, 1, 2, 1, 1, 1, 0], [2, 10, 0, 0, 2, 2, 2, 0, 0, 13, 2], [1, 0, 0, 0, 1, 2, 2, 2, 0, 0, 2], [1, 0, 0, 0, 1, 1, 2, 2, 1, 0, 0], [2, 2, 1, 1, 0, 2, 0, 1, 0, 2, 1], [1, 2, 2, 1, 2, 0, 1, 1, 1, 2, 0], [2, 2, 2, 2, 0, 1, 0, 1, 1, 2, 2], [1, 0, 2, 2, 1, 1, 1, 0, 1, 0, 0], [1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [1, 11, 0, 0, 2, 2, 2, 0, 0, 12, 0], [0, 2, 2, 0, 1, 0, 2, 0, 0, 0, 0]], \"agents\": [{\"agent_id\": 0, \"is_alive\": true, \"position\": [1, 1], \"ammo\": 1, \"blast_strength\": 2, \"can_kick\": false}, {\"agent_id\": 1, \"is_alive\": true, \"position\": [9, 1], \"ammo\": 1, \"blast_strength\": 2, \"can_kick\": false}, {\"agent_id\": 2, \"is_alive\": true, \"position\": [9, 9], \"ammo\": 1, \"blast_strength\": 2, \"can_kick\": false}, {\"agent_id\": 3, \"is_alive\": true, \"position\": [1, 9], \"ammo\": 1, \"blast_strength\": 2, \"can_kick\": false}], \"bombs\": [], \"flames\": [], \"items\": [[[10, 1], 6], [[10, 2], 7], [[4, 0], 6], [[0, 6], 6], [[3, 7], 6], [[1, 6], 6], [[6, 3], 7], [[1, 10], 8], [[4, 9], 7], [[5, 4], 7], [[9, 6], 7], [[0, 4], 6], [[1, 5], 6], [[6, 10], 8], [[4, 1], 8], [[7, 2], 8], [[10, 6], 6], [[5, 9], 6], [[1, 0], 8], [[2, 6], 8]], \"intended_actions\": []}";
    std::string jObs = "{\"alive\": [0, 1, 2, 3], \"board\": [[0, 0, 0, 2, 1, 2, 5, 5, 5, 5, 5], [0, 10, 0, 0, 2, 2, 5, 5, 5, 5, 5], [0, 0, 0, 2, 2, 0, 5, 5, 5, 5, 5], [2, 0, 2, 0, 1, 2, 5, 5, 5, 5, 5], [1, 2, 2, 1, 0, 1, 5, 5, 5, 5, 5], [2, 2, 0, 2, 1, 0, 5, 5, 5, 5, 5], [5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5], [5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5], [5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5], [5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5], [5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5]], \"bomb_blast_strength\": [[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]], \"bomb_life\": [[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]], \"bomb_moving_direction\": [[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]], \"flame_life\": [[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]], \"game_type\": 3, \"game_env\": \"pommerman.envs.v2:Pomme\", \"position\": [1, 1], \"blast_strength\": 2, \"can_kick\": false, \"teammate\": [2], \"ammo\": 1, \"enemies\": [1, 3], \"step_count\": 0, \"message\": [0, 0]}";

    bboard::State s = PyStringToState(jState);
    bboard::PrintState(&s);

    PyStringToObservation(jObs);

    return 0;

    std::string dataPrefix = "data";
    if (argc >= 2) {
        dataPrefix = argv[1];
    }

    int chunkSize = 1000;
    int chunkCount = 100;

    FileBasedIPCManager ipcManager(dataPrefix, chunkSize, chunkCount);
    Runner runner;

    // generate enough steps (chunkSize * chunkCount) to fill one dataset
    runner.generateSupervisedTrainingData(&ipcManager, 800, -1, chunkSize * chunkCount, false);
    ipcManager.flush();

    return 0;
}
